{
   "openapi": "3.0.0",
   "info": {
      "title": "Developers CRUD",
      "description": "API developed  to meet the necessary technical proof requirements.",
      "contact": {
         "email": "ericwsmga@gmail.com"
      },
      "version": "1.0.0"
   },
   "paths": {
      "/developers": {
         "post": {
            "summary": "Developer registration",
            "description": "Route responsible for registering a new developer",
            "tags": ["Developer"],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Developer"
                     },
                     "examples": {
                        "developer": {
                           "value": {
                              "name": "Developer",
                              "email": "email@email.com",
                              "sex": "M",
                              "hobby": "Gosto de codar nas horas vagas",
                              "birthDate": "01/01/2000"
                           }
                        }
                     }
                  }
               }
            },
            "responses": {
               "400": {
                  "description": "Bad Request"
               },
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "$ref": "#/components/schemas/Developer"
                        }
                     }
                  }
               }
            }
         },
         "getdoc": {
            "summary": "Get all developers",
            "description": "Route responsible for getting all developers",
            "tags": ["Developer"],
            "responses": {
               "200": {
                  "description": "Ok"
               }
            }
         }
      },
      "/developers/{id}": {
         "get": {
            "summary": "Get developer by id",
            "description": "Route responsible for getting a developer by id",
            "tags": ["Developer"],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Developer id for search",
                  "required": true
               }
            ],
            "responses": {
               "400": {
                  "description": "Bad Request"
               },
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "$ref": "#/components/schemas/Developer"
                        }
                     }
                  }
               }
            }
         },
         "put": {
            "summary": "Update developer by id",
            "description": "Route responsible for updating a developer by id",
            "tags": ["Developer"],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Developer"
                     },
                     "examples": {
                        "developer": {
                           "value": {
                              "name": "Developer",
                              "email": "email@email.com",
                              "sex": "M",
                              "hobby": "Gosto de codar nas horas vagas",
                              "birthDate": "01/01/2000"
                           }
                        }
                     }
                  }
               }
            },
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Developer id for search",
                  "required": true
               }
            ],
            "responses": {
               "400": {
                  "description": "Bad Request"
               },
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "$ref": "#/components/schemas/Developer"
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "summary": "Remove developer by id",
            "description": "Route responsible for removing a developer by id",
            "tags": ["Developer"],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Developer id for removal",
                  "required": true
               }
            ],
            "responses": {
               "400": {
                  "description": "Bad Request"
               },
               "204": {
                  "description": "No Content"
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "Developer": {
            "type": "object",
            "properties": {
               "name": {
                  "type": "string"
               },
               "email": {
                  "type": "string"
               },
               "sex": {
                  "type": "string"
               },
               "age": {
                  "type": "integer"
               },
               "hobby": {
                  "type": "string"
               },
               "birthDate": {
                  "type": "string",
                  "format": "date"
               }
            }
         }
      }
   }
}
